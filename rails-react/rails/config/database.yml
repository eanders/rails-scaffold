default: &default
  adapter: postgis
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  timeout: 5000
  variables:
    # random_page_cost: Cost of a non-sequentially fetched disk page
    # Set to 1.1 because our databases use SSDs, making random access almost as efficient as sequential.
    # This setting helps the query planner make more accurate decisions about index usage.
    random_page_cost: 1.1
    # seq_page_cost: Cost of a sequentially fetched disk page
    # Set to 1 (default value) to maintain consistency with our adjusted random_page_cost.
    # This ensures a balanced cost model for the query planner when comparing sequential vs. index scans.
    seq_page_cost: 1
    # work_mem: Memory used for sort operations and hash tables per operation
    # Increased to 8MB to potentially improve performance for queries involving large sorts or hash operations.
    # Be cautious: setting this too high can lead to excessive memory usage, especially on busy systems with many concurrent operations.
    # Monitor memory usage and adjust as needed based on your workload and available resources.
    work_mem: 8MB

development:
  <<: *default
  url: <%= ENV.fetch("DATABASE_URL_PRIMARY") %>

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test:
  <<: *default
  url: <%= ENV.fetch("DATABASE_URL_TEST") %>

# Store production database in the storage/ directory, which by default
# is mounted as a persistent Docker volume in config/deploy.yml.
production:
  primary:
    <<: *default
    database: storage/production.sqlite3
  cache:
    <<: *default
    database: storage/production_cache.sqlite3
    migrations_paths: db/cache_migrate
  queue:
    <<: *default
    database: storage/production_queue.sqlite3
    migrations_paths: db/queue_migrate
  cable:
    <<: *default
    database: storage/production_cable.sqlite3
    migrations_paths: db/cable_migrate
